version: '3.7'
services:

  gateway:
    container_name: gateway
    build:
      context: gateway/docker
      dockerfile: development/nginx/Dockerfile
      args:
        ELK_KIBANA_USERNAME: ${ELK_KIBANA_USERNAME}
        ELK_KIBANA_PASSWORD: ${ELK_KIBANA_PASSWORD}
        SWAGGER_UI_USERNAME: ${SWAGGER_UI_USERNAME}
        SWAGGER_UI_PASSWORD: ${SWAGGER_UI_PASSWORD}
    ports:
      - "5601:5601"
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
      - "8084:8084"
      - "8085:8085"
    depends_on:
      - frontend-nginx
      - api-nginx
      - ws
      - amqp
      - swagger-ui
      - elk
      - mailer

  frontend-nginx:
    container_name: frontend-nginx
    build:
      context: frontend/docker/development/nginx
    depends_on:
      - frontend-node

  frontend-node:
    container_name: frontend-node
    build:
      context: frontend/docker/development/node
    volumes:
      - ./frontend:/var/www
    environment:
      VUE_APP_API_URL: ${VUE_APP_API_URL}
      VUE_APP_WS_URL: ${VUE_APP_WS_URL}
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn serve"
    tty: true

  frontend-node-cli:
    container_name: frontend-node-cli
    build:
      context: frontend/docker/development/node
    volumes:
      - ./frontend:/var/www

  api-nginx:
    container_name: api-nginx
    build:
      context: api/docker
      dockerfile: development/nginx/Dockerfile
      args:
        SWAGGER_URL: ${SWAGGER_URL}
    volumes:
      - ./api:/var/www
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "api-nginx"
    depends_on:
      - api-php-fpm

  api-php-fpm:
    container_name: api-php-fpm
    build:
      context: api/docker
      dockerfile: development/php-fpm/Dockerfile
    environment:
      PHP_IDE_CONFIG: serverName=docker_api
      API_ENV: ${API_ENV}
      API_DEBUG: ${API_DEBUG}
      API_DB_HOST: ${API_DB_HOST}
      API_DB_USER: ${API_DB_USER}
      API_DB_PASSWORD: ${API_DB_PASSWORD}
      API_DB_NAME: ${API_DB_NAME}
      API_MAILER_HOST: ${API_MAILER_HOST}
      API_MAILER_PORT: ${API_MAILER_PORT}
      API_MAILER_USERNAME: ${API_MAILER_USERNAME}
      API_MAILER_PASSWORD: ${API_MAILER_PASSWORD}
      API_MAILER_ENCRYPTION: ${API_MAILER_ENCRYPTION}
      API_MAILER_FROM_EMAIL: ${API_MAILER_FROM_EMAIL}
      API_OAUTH_PUBLIC_KEY_PATH: ${API_OAUTH_PUBLIC_KEY_PATH}
      API_OAUTH_PRIVATE_KEY_PATH: ${API_OAUTH_PRIVATE_KEY_PATH}
      API_OAUTH_ENCRYPTION_KEY: ${API_OAUTH_ENCRYPTION_KEY}
      API_AMQP_HOST: ${API_AMQP_HOST}
      API_AMQP_PORT: ${API_AMQP_PORT}
      API_AMQP_USERNAME: ${API_AMQP_USERNAME}
      API_AMQP_PASSWORD: ${API_AMQP_PASSWORD}
      API_AMQP_VHOST: ${API_AMQP_VHOST}
      FRONTEND_URL: ${FRONTEND_URL}
    volumes:
      - ./api:/var/www
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "api-php-fpm"

  api-queue-consumer:
    container_name: api-queue-consumer
    build:
      context: api/docker
      dockerfile: development/php-cli/Dockerfile
    environment:
      API_ENV: ${API_ENV}
      API_DEBUG: ${API_DEBUG}
      API_DB_HOST: ${API_DB_HOST}
      API_DB_USER: ${API_DB_USER}
      API_DB_PASSWORD: ${API_DB_PASSWORD}
      API_DB_NAME: ${API_DB_NAME}
      API_MAILER_HOST: ${API_MAILER_HOST}
      API_MAILER_PORT: ${API_MAILER_PORT}
      API_MAILER_USERNAME: ${API_MAILER_USERNAME}
      API_MAILER_PASSWORD: ${API_MAILER_PASSWORD}
      API_MAILER_ENCRYPTION: ${API_MAILER_ENCRYPTION}
      API_MAILER_FROM_EMAIL: ${API_MAILER_FROM_EMAIL}
      API_OAUTH_PUBLIC_KEY_PATH: ${API_OAUTH_PUBLIC_KEY_PATH}
      API_OAUTH_PRIVATE_KEY_PATH: ${API_OAUTH_PRIVATE_KEY_PATH}
      API_OAUTH_ENCRYPTION_KEY: ${API_OAUTH_ENCRYPTION_KEY}
      API_AMQP_HOST: ${API_AMQP_HOST}
      API_AMQP_PORT: ${API_AMQP_PORT}
      API_AMQP_USERNAME: ${API_AMQP_USERNAME}
      API_AMQP_PASSWORD: ${API_AMQP_PASSWORD}
      API_AMQP_VHOST: ${API_AMQP_VHOST}
      FRONTEND_URL: ${FRONTEND_URL}
    volumes:
      - ./api:/var/www
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "api-queue-consumer"
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && php bin/app.php tasks:process"

  api-php-cli:
    container_name: api-php-cli
    build:
      context: api/docker
      dockerfile: development/php-cli/Dockerfile
    environment:
      API_ENV: ${API_ENV}
      API_DEBUG: ${API_DEBUG}
      API_DB_HOST: ${API_DB_HOST}
      API_DB_USER: ${API_DB_USER}
      API_DB_PASSWORD: ${API_DB_PASSWORD}
      API_DB_NAME: ${API_DB_NAME}
      API_MAILER_HOST: ${API_MAILER_HOST}
      API_MAILER_PORT: ${API_MAILER_PORT}
      API_MAILER_USERNAME: ${API_MAILER_USERNAME}
      API_MAILER_PASSWORD: ${API_MAILER_PASSWORD}
      API_MAILER_ENCRYPTION: ${API_MAILER_ENCRYPTION}
      API_MAILER_FROM_EMAIL: ${API_MAILER_FROM_EMAIL}
      API_OAUTH_PUBLIC_KEY_PATH: ${API_OAUTH_PUBLIC_KEY_PATH}
      API_OAUTH_PRIVATE_KEY_PATH: ${API_OAUTH_PRIVATE_KEY_PATH}
      API_OAUTH_ENCRYPTION_KEY: ${API_OAUTH_ENCRYPTION_KEY}
      API_AMQP_HOST: ${API_AMQP_HOST}
      API_AMQP_PORT: ${API_AMQP_PORT}
      API_AMQP_USERNAME: ${API_AMQP_USERNAME}
      API_AMQP_PASSWORD: ${API_AMQP_PASSWORD}
      API_AMQP_VHOST: ${API_AMQP_VHOST}
      FRONTEND_URL: ${FRONTEND_URL}
    volumes:
      - ./api:/var/www
      - composer:/root/.composer/cache

  api-db:
    container_name: api-db
    image: postgres:12.2-alpine
    volumes:
      - api-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${API_DB_USER}
      POSTGRES_PASSWORD: ${API_DB_PASSWORD}
      POSTGRES_DB: ${API_DB_NAME}
      TZ: Europe/Moscow
    ports:
      - "54321:5432"

  mailer:
    image: mailhog/mailhog

  ws:
    container_name: ws
    build:
      context: websocket/docker
    environment:
      WS_JWT_PUBLIC_KEY: ${WS_JWT_PUBLIC_KEY}
      WS_AMQP_URI: ${WS_AMQP_URI}
    volumes:
      - ./websocket:/var/www
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && /start.sh && npm start"

  ws-node-cli:
    container_name: ws-node-cli
    image: node:10.13-jessie
    working_dir: /var/www
    volumes:
      - ./websocket:/var/www

  amqp:
    container_name: amqp
    build:
      context: amqp/docker
    environment:
      RABBITMQ_ERLANG_COOKIE: ${API_AMQP_COOKIE}
      RABBITMQ_DEFAULT_USER: ${API_AMQP_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${API_AMQP_PASSWORD}
    volumes:
      - amqp:/var/lib/rabbitmq

  swagger-ui:
    container_name: swagger-ui
    image: swaggerapi/swagger-ui
    environment:
      URL: ${SWAGGER_CONFIG_URL}
    depends_on:
      - api-nginx

  elk:
    container_name: elk
    build:
      context: elk/docker
    volumes:
      - elk-data:/var/lib/elasticsearch
    environment:
      ES_JAVA_OPTS: ${ELK_ES_JAVA_OPTS}
    ports:
      - "12201:12201/udp"

  maintenance:
    image: alpine
    volumes:
      - ./:/var/www
    working_dir: /var/www

volumes:
  composer:
  api-postgres:
  amqp:
  elk-data:
