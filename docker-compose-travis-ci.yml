version: '3.7'
services:

  gateway:
    container_name: gateway
    build:
      context: gateway/docker
      dockerfile: development/nginx/Dockerfile
      args:
        ELK_KIBANA_USERNAME: ${ELK_KIBANA_USERNAME}
        ELK_KIBANA_PASSWORD: ${ELK_KIBANA_PASSWORD}
        SWAGGER_UI_USERNAME: ${SWAGGER_UI_USERNAME}
        SWAGGER_UI_PASSWORD: ${SWAGGER_UI_PASSWORD}
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
    depends_on:
      - frontend-nginx
      - api-nginx
      - mailer

  frontend-nginx:
    container_name: frontend-nginx
    build:
      context: frontend/docker/development/nginx
    depends_on:
      - frontend-node

  frontend-node:
    container_name: frontend-node
    build:
      context: frontend/docker/development/node
    volumes:
      - ./frontend:/var/www
    environment:
      VUE_APP_API_URL: ${VUE_APP_API_URL}
      VUE_APP_WS_URL: ${VUE_APP_WS_URL}
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn serve"
    tty: true

  api-nginx:
    container_name: api-nginx
    build:
      context: api/docker
      dockerfile: development/nginx/Dockerfile
      args:
        SWAGGER_URL: ${SWAGGER_URL}
    volumes:
      - ./api:/var/www
    depends_on:
      - api-php-fpm

  api-php-fpm:
    container_name: api-php-fpm
    build:
      context: api/docker
      dockerfile: development/php-fpm/Dockerfile
    environment:
      API_ENV: test
      API_DEBUG: ${API_DEBUG}
      API_DB_HOST: ${API_DB_HOST}
      API_DB_USER: ${API_DB_USER}
      API_DB_PASSWORD: ${API_DB_PASSWORD}
      API_DB_NAME: ${API_DB_NAME}
      API_MAILER_HOST: ${API_MAILER_HOST}
      API_MAILER_PORT: ${API_MAILER_PORT}
      API_MAILER_USERNAME: ${API_MAILER_USERNAME}
      API_MAILER_PASSWORD: ${API_MAILER_PASSWORD}
      API_MAILER_ENCRYPTION: ${API_MAILER_ENCRYPTION}
      API_MAILER_FROM_EMAIL: ${API_MAILER_FROM_EMAIL}
      API_OAUTH_PUBLIC_KEY_PATH: ${API_OAUTH_PUBLIC_KEY_PATH}
      API_OAUTH_PRIVATE_KEY_PATH: ${API_OAUTH_PRIVATE_KEY_PATH}
      API_OAUTH_ENCRYPTION_KEY: ${API_OAUTH_ENCRYPTION_KEY}
      API_AMQP_HOST: ${API_AMQP_HOST}
      API_AMQP_PORT: ${API_AMQP_PORT}
      API_AMQP_USERNAME: ${API_AMQP_USERNAME}
      API_AMQP_PASSWORD: ${API_AMQP_PASSWORD}
      API_AMQP_VHOST: ${API_AMQP_VHOST}
      FRONTEND_URL: ${FRONTEND_URL}
    volumes:
      - ./api:/var/www
    depends_on:
      - api-php-cli

  api-php-cli:
    container_name: api-php-cli
    build:
      context: api/docker
      dockerfile: development/php-cli/Dockerfile
    environment:
      TRAVIS: ${TRAVIS}
      TRAVIS_JOB_ID: ${TRAVIS_JOB_ID}
      API_ENV: test
      API_DEBUG: ${API_DEBUG}
      API_DB_HOST: ${API_DB_HOST}
      API_DB_USER: ${API_DB_USER}
      API_DB_PASSWORD: ${API_DB_PASSWORD}
      API_DB_NAME: ${API_DB_NAME}
      API_MAILER_HOST: ${API_MAILER_HOST}
      API_MAILER_PORT: ${API_MAILER_PORT}
      API_MAILER_USERNAME: ${API_MAILER_USERNAME}
      API_MAILER_PASSWORD: ${API_MAILER_PASSWORD}
      API_MAILER_ENCRYPTION: ${API_MAILER_ENCRYPTION}
      API_MAILER_FROM_EMAIL: ${API_MAILER_FROM_EMAIL}
      API_OAUTH_PUBLIC_KEY_PATH: ${API_OAUTH_PUBLIC_KEY_PATH}
      API_OAUTH_PRIVATE_KEY_PATH: ${API_OAUTH_PRIVATE_KEY_PATH}
      API_OAUTH_ENCRYPTION_KEY: ${API_OAUTH_ENCRYPTION_KEY}
      API_AMQP_HOST: ${API_AMQP_HOST}
      API_AMQP_PORT: ${API_AMQP_PORT}
      API_AMQP_USERNAME: ${API_AMQP_USERNAME}
      API_AMQP_PASSWORD: ${API_AMQP_PASSWORD}
      API_AMQP_VHOST: ${API_AMQP_VHOST}
      FRONTEND_URL: ${FRONTEND_URL}
    volumes:
      - ./:/var/www
    depends_on:
      - api-db
      - mailer

  api-db:
    container_name: api-db
    image: postgres:12.2-alpine
    environment:
      POSTGRES_USER: api
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: api
      TZ: Europe/Moscow

  mailer:
    image: mailhog/mailhog
